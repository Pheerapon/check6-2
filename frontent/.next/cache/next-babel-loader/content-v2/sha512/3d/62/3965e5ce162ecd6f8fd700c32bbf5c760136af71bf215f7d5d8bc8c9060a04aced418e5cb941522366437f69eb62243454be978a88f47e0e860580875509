{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fiw/Desktop/\\u0E44\\u0E04\\u0E40\\u0E2D\\u0E49\\u0E19/clone/Rest-API-Fetch/pages/dogs-swr.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport useSWR, { mutate } from 'swr';\nconst URL = `http://localhost:8002/api/dogs`;\n\nconst fetcher = url => axios.get(url).then(res => res.data);\n\nconst SWR1 = () => {\n  const {\n    0: student,\n    1: setDog\n  } = useState('');\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: species,\n    1: setSpecies\n  } = useState('');\n  const {\n    0: age,\n    1: setAge\n  } = useState('');\n  const {\n    0: price,\n    1: setPrice\n  } = useState(0);\n  const {\n    data\n  } = useSWR(URL, fetcher);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 22\n  }, this);\n\n  const printDogs = dogs => {\n    console.log('Dogs:', dogs);\n    if (dogs && dogs.length) return dogs.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [student ? student.name : '-', \" : \", student ? student.species : '-', \" : \", student ? student.age : '-', \" : \", student ? student.price : '-', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteDog(student.id),\n        children: \" Delete \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getDog(student.id),\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateDog(student.id),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this));else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No dogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const getDog = async id => {\n    const result = await axios.get(`${URL}/${id}`);\n    console.log('Dog id: ', result.data);\n    setDog(result.data);\n  };\n\n  const addDog = async (name, species, age, price) => {\n    const result = await axios.post(URL, {\n      name,\n      species,\n      age,\n      price\n    });\n    console.log(result.data);\n    mutate(URL);\n  };\n\n  const deleteDog = async id => {\n    const result = await axios.delete(`${URL}/${id}`);\n    console.log(result.data);\n    mutate(URL);\n  };\n\n  const updateDog = async id => {\n    const result = await axios.put(`${URL}/${id}`, {\n      name,\n      species,\n      age,\n      price\n    });\n    console.log('student id update: ', result.data);\n    mutate(URL);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Dogs \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: printDogs(data.list)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this), \"selected student : \", student.name, \" \", student.species, \" \", student.age, \" \", student.price, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }, this), \"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 79\n    }, this), \"Surname:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setSpecies(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 85\n    }, this), \"Major:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setAge(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 79\n    }, this), \"price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setPrice(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 83\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDog(name, species, age, price),\n      children: \"Add new student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n};\n\nexport default SWR1;","map":{"version":3,"sources":["/Users/fiw/Desktop/ไคเอ้น/clone/Rest-API-Fetch/pages/dogs-swr.js"],"names":["React","useState","axios","useSWR","mutate","URL","fetcher","url","get","then","res","data","SWR1","student","setDog","name","setName","species","setSpecies","age","setAge","price","setPrice","printDogs","dogs","console","log","length","map","index","deleteDog","id","getDog","updateDog","result","addDog","post","delete","put","list","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport useSWR, { mutate } from 'swr'\n \nconst URL = `http://localhost:8002/api/dogs`\nconst fetcher = url => axios.get(url).then(res => res.data)\nconst SWR1 = () => {\n \n   \n   const [student, setDog] = useState('')\n   const [name, setName] = useState('')\n   const [species, setSpecies] = useState('')\n   const [age, setAge] = useState('')\n   const [price, setPrice] = useState(0)\n\n \n   const { data } = useSWR(URL, fetcher)\n   if (!data) return <div>Loading...</div>\n   \n   \n \n   const printDogs = (dogs) => {\n       console.log('Dogs:', dogs)\n       if (dogs && dogs.length)\n           return (dogs.map((student, index) =>\n           (<li key={index}>\n               {(student) ? student.name : '-'} : {(student) ? student.species : '-'} : {(student) ? student.age : '-'} : {(student) ? student.price : '-'}\n               <button onClick={() => deleteDog(student.id)}> Delete </button>\n               <button onClick={() => getDog(student.id)}>Get</button>\n               <button onClick={() => updateDog(student.id)}>Update</button>\n           </li>)\n           ))\n       else {\n           return (<h2>No dogs</h2>)\n       }\n   }\n \n   const getDog = async (id) => {\n       const result = await axios.get(`${URL}/${id}`)\n       console.log('Dog id: ', result.data)\n       setDog(result.data)\n   }\n \n   const addDog = async (name, species,age,price) => {\n       const result = await axios.post(URL, { name, species,age,price })\n       console.log(result.data)\n       mutate(URL)\n   }\n \n   const deleteDog = async (id) => {\n       const result = await axios.delete(`${URL}/${id}`)\n       console.log(result.data)\n       mutate(URL)\n   }\n    const updateDog = async (id) => {\n       const result = await axios.put(`${URL}/${id}`,{\n           name,\n           species,\n           age,\n           price\n       })\n       console.log('student id update: ', result.data)\n       mutate(URL)\n   }\n \n   return (<div>\n       <h1> Dogs </h1>\n       <ul>{printDogs(data.list)}</ul>\n       \n       selected student : {student.name} {student.species} {student.age} {student.price}\n       <h2>Add student</h2>\n          Name:<input type=\"text\" onChange={(e) => setName(e.target.value)} /><br/>\n          Surname:<input type=\"text\" onChange={(e) => setSpecies(e.target.value)}/> <br />\n          Major:<input type=\"text\" onChange={(e) => setAge(e.target.value)}/> <br />\n          price:<input type=\"number\" onChange={(e) => setPrice(e.target.value)}/> <br />\n       <button onClick={() => addDog(name, species,age,price)}>Add new student</button>\n \n   </div>)\n}\n \nexport default SWR1"]},"metadata":{},"sourceType":"module"}